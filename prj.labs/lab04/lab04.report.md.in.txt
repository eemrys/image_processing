## Работа 4. Использование бинаризации для анализа изображений (выделение символов) 
автор: Яковлева А.А.
url: https://mysvn.ru/yakovleva/yakovleva_a_a/prj.labs/lab04

### Задание
1. Самостоятельно изготовить эталонный вариант бинаризованного изображения.
2. Цветоредуцировать исходное цветное изображение до изображения в градациях серого $G_1$.
3. Бинаризовать изображение $G_1$ и получить бинаризованное изображение $B_1$.
4. Применить фильтрацию для улучшения качества бинаризованного изображения $F_1$.
5. Выделить компоненты связности.
6. Произвести фильтрацию компонент связности (классификация на "шумовые" и "объекты", $V_1$).
7. Оценить числовые характеристики качества бинаризации на разных этапах и визуализировать отклонение $E_1$ результата анализа от эталона. 
8. Реализовать и настроить локальную бинаризацию по статье "Быстрый алгоритм локальной бинаризации с гауссовым окном" (https://mipt.ru/upload/e35/09-FIVT-arpg5tlxag0.pdf).
9. Сделать пп.3-7 для метода из п.8 (с теми же настройками, получить $B_2$, $F_2$, $V_2$, $E_2$ и численные оценки).


### Использованные методы

Для бинаризации в пункте 3 была применена адаптивная бинаризация. Порог бинаризации - взвешенная сумму (кросс-корреляция с гауссовым окном) пикселей картинки. Для реализации применена функция cv::adaptiveThreshold с параметрами cv::ADAPTIVE_THRESH_GAUSSIAN_C, cv::THRESH_BINARY, 19, 10.
Для фильтрации изображения применялось Гауссово сглаживание (функция cv::GaussianBlur с размером гауссова ядра 3x3).
Для выделения компонент связности была использовала функция cv::connectedComponentsWithStats.

### Оценка числовых характеристик

Для оценки качества бинаризации применена F-мера.
Для её вычисления произведены следующие шаги:
- выделены компоненты связности обоих изображений
- для каждой компоненты связности эталонного изображения вычислены координаты наименьшего прямоугольника на изображении, включающего эту компоненту
- для этого прямоугольника вычислено количество совпадающих черных пикселей на эталоне и на оцениваемом изображении
- значение true positive - это отношение количества совпадающих черных пикселей к площади текущей компаненты связности на эталонном изображении
- значение false positive - это количество выявленных на оцениваемом изображении компонент связности, таких, что на эталонном изображении в этом месте нет чёрных пикселей
- значение false negative - это количество выявленных на эталонном изображении компонент связности, таких, что на оцениваемом изображении в этом месте нет чёрных пикселей
- значение recall:
	$$recall=\frac{true positive}{true positive + false negative}$$
- значение precision:
	$$precision=\frac{true positive}{true positive + false positive}$$
- значение F-меры:
	$$F=\frac{2 * precision * recall}{precision + recall}$$

### Результаты

Числовые характеристики использованных встроенных функций:
- после бинаризации - 0.182;
- после фильтрации - 0.451;
- после фильтрации компонент - 0.971.

Числовие характеристики метода из статьи:
- после бинаризации - 0.184;
- после фильтрации - 0.368;
- после фильтрации компонент - 0.885.

![](lab04.src.jpg)
Рис. 1. Исходное тестовое изображение

![](lab04.g1.png)
Рис. 2. Визуализация результата $G_1$ цветоредукции

![](lab04.b1.png)
Рис. 3. Визуализация результата бинаризаии $B_1$

![](lab04.f1.png)
Рис. 4. Визуализация результата $F_1$ фильтрации бинаризованного изображения $B_1$

![](lab04.v1.png)
Рис. 5. Визуализация результатов фильтрации компонент связности $V_1$

![](lab04.e1.png)
Рис. 6. Визуализация отклонений от эталона $E_1$

![](lab04.b2.png)
Рис. 7. Визуализация результата бинаризаии $B_2$ (метод с гауссовым окном)

![](lab04.f2.png)
Рис. 8. Визуализация результата $F_2$ фильтрации бинаризованного изображения $B_2$

![](lab04.v2.png)
Рис. 9. Визуализация результатов фильтрации компонент связности $V_2$ (метод с гауссовым окном)

![](lab04.e2.png)
Рис. 10. Визуализация отклонений от эталона $E_2$ (метод с гауссовым окном)

### Текст программы

```cpp
@cpp_source@
```
